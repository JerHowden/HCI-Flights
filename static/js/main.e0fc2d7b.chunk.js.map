{"version":3,"sources":["components/Main.jsx","components/Schedule.jsx","components/Panel.jsx","components/Map.jsx","components/Navigation.jsx","App.js","serviceWorker.js","index.js","data/Buildings.geojson"],"names":["Main","props","state","Fade","in","timeout","id","Component","Schedule","events","fetch","then","res","console","log","JSON","parse","Panel","onSetSidebarOpen","bind","sidebarOpen","open","this","setState","rootId","sidebarId","onSetOpen","styles","sidebar","backgroundColor","color","width","window","innerWidth","zIndex","overflowX","pullRight","data","src","image","label","code","Chip","variant","size","style","marginLeft","links","map","link","href","title","target","display","marginRight","marginBottom","Avatar","icon","description","notHighlighted","highlighted","Map","_onHover","event","hoverInfo","buildingName","features","srcEvent","hoveredFeature","offsetX","offsetY","find","f","layer","properties","lngLat","filter","_onClick","clickedFeature","buildingData","locations","loc","history","push","value","viewport","height","innerHeight","latitude","longitude","zoom","jsonData","activeFeature","match","params","location","apiKey","styleFill","highlightedFill","selectOption","locs","i","nextProps","Object","values","closeButton","className","options","defaultValue","keys","key","toLowerCase","filterOption","option","searchText","includes","tags","some","tag","formatOptionLabel","to","ref","reactMap","mapStyle","mapboxApiAccessToken","interactiveLayerIds","onViewportChange","onHover","onClick","type","_renderPopup","_renderSidebar","withRouter","Navigation","pathname","AppBar","position","boxShadow","Toolbar","Grid","container","justify","item","Button","alt","activeClassName","App","library","add","fab","fas","far","basename","exact","path","render","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e0fc2d7b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Fade } from '@material-ui/core'\r\n\r\nimport './Main.css'\r\n\r\nexport default class Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fade in={true} timeout={3000} id=\"MainTitle\">\r\n                <div>\r\n                    <div>TEXAS TECH</div>\r\n                    <div>RESOURCE GUIDE</div>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\r\n// import moment from 'moment'\r\nimport axios from 'axios'\r\n// import TTUevents from './Events.json'\r\n\r\nexport default class Schedule extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            events: [],\r\n            // date: new Date(),\r\n        }\r\n\r\n    }\r\n\r\ncomponentWillMount(){\r\n\r\n    fetch('src/components/Events.json')\r\n    .then(res => console.log(JSON.parse(res)))\r\n\r\n}\r\n\r\n    render() {\r\n        // const localizer = momentLocalizer(moment)\r\n\r\n        return(\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component, Fragment } from \"react\"\r\n\r\nimport { Chip, Avatar } from '@material-ui/core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Sidebar from \"react-sidebar\"\r\n\r\nimport './Panel.css'\r\n\r\nexport default class Panel extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\r\n\r\n        this.state = {\r\n            sidebarOpen: true\r\n        };\r\n    }\r\n\r\n    onSetSidebarOpen(open) {\r\n        this.setState({ sidebarOpen: open });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Sidebar\r\n                rootId=\"MapSidebarRoot\"\r\n                sidebarId=\"MapSidebar\"\r\n                open={this.state.sidebarOpen}\r\n                onSetOpen={this.onSetSidebarOpen}\r\n                styles={{ \r\n                    sidebar: { \r\n                        backgroundColor: \"#353535\", \r\n                        color: \"#FFF\", \r\n                        width: window.innerWidth*.5 - 32,\r\n                        zIndex: 20,\r\n                        overflowX: \"hidden\"\r\n                    } \r\n                }}\r\n                pullRight\r\n\r\n                sidebar={this.props.data ? \r\n                    <div id=\"SidebarData\">\r\n                        <img src={this.props.data.image} width={window.innerWidth*.5 - 32}/>\r\n                        <h1>\r\n                            {this.props.data.label}\r\n                            {this.props.data.code ? \r\n                                <Chip variant=\"outlined\" label={this.props.data.code} size=\"small\" style={{marginLeft: \"8px\", color: \"#CACACA\"}} /> \r\n                            : \"\"}\r\n                        </h1>\r\n                        <div>\r\n                            {this.props.data.links.map(link => \r\n                                <a href={link.link} title={link.label} target=\"_blank\" style={{ display: \"inline-block\", marginRight: \"8px\", marginBottom: \"6px\"}}>\r\n                                    <Avatar style={{backgroundColor: \"#2D2D2D\"}}>\r\n                                        <FontAwesomeIcon icon={link.icon} />\r\n                                    </Avatar>\r\n                                </a>\r\n                            )}\r\n                        </div>\r\n                        <p>{this.props.data.description}</p>\r\n                    </div>\r\n                : \"\"}\r\n            >\r\n                \r\n            </Sidebar>\r\n        );\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nimport { Link, Redirect, withRouter } from 'react-router-dom'\r\nimport ReactMapGL, { Popup, Source, Layer, Marker } from 'react-map-gl'\r\nimport Select from 'react-select'\r\nimport { Chip } from '@material-ui/core'\r\n\r\nimport 'mapbox-gl/dist/mapbox-gl.css'\r\nimport jsonData from '../data/Buildings.geojson'\r\nimport locations from '../data/locations.json'\r\nimport Panel from './Panel'\r\nimport './Map.css'\r\n\r\nconst notHighlighted = {\r\n\t\"id\": \"building-fills\",\r\n\t\"type\": \"fill\",\r\n\t\"source\": \"Building Data\",\r\n\t\"layout\": {\r\n\t\t// \"text-field\": \"title\",\r\n\t\t// \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"]\r\n\t},\r\n\t\"paint\": {\r\n\t\t\"fill-color\": \"#627BC1\",\r\n\t\t\"fill-opacity\": .3,\r\n\t\t// \"fill-outline-color\": \"#627BC1\",\r\n\t}\r\n}\r\n\r\nconst highlighted = {\r\n\t\"id\": \"building-fills\",\r\n\t\"type\": \"fill\",\r\n\t\"source\": \"Building Data\",\r\n\t\"layout\": {\r\n\t\t// \"text-field\": \"title\",\r\n\t\t// \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"]\r\n\t},\r\n\t\"paint\": {\r\n\t\t\"fill-color\": \"#fcba03\",\r\n\t\t\"fill-opacity\": 1,\r\n\t\t// \"fill-outline-color\": \"#fcba03\",\r\n\t}\r\n}\r\nclass Map extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\r\n\t\t\tviewport: {\r\n\t\t\t\twidth: window.innerWidth, \r\n\t\t\t\theight: window.innerHeight - 64,\r\n\t\t\t\tlatitude: 33.585509,\r\n\t\t\t\tlongitude: -101.882083,\r\n\t\t\t\tzoom: 14,\r\n\t\t\t},\r\n\r\n\t\t\tfilter: ['in', 'BUILDING', ''],\r\n\t\t\tdata: jsonData,\r\n\t\t\thoveredFeature: null,\r\n\t\t\tactiveFeature: locations[this.props.match.params.location],\r\n\t\t\thoverInfo: null,\r\n\t\t\tapiKey: 'pk.eyJ1IjoiZWxpYXNjbTE3IiwiYSI6ImNrMzR4NmJvdzFhOW8zbXBweXUwcHIwdDYifQ.T_3ZZklfpxf5b8wibfI0ew',\r\n\t\t\tstyleFill: notHighlighted,\r\n\t\t\thighlightedFill: highlighted,\r\n\r\n\t\t\tselectOption: {},\r\n\t\t\tlocations: [],\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\t// Load Locations json into state\r\n\t\tlet locs = [];\r\n\t\tfor(let i in locations) {\r\n\t\t\tlocations[i].value = i\r\n\t\t\tlocs.push(locations[i])\r\n\t\t}\r\n\t\tconsole.log(locations, locs, this.props, jsonData)\r\n\t\tthis.setState({ locations: locs }, () => console.log(\"Locations:\", this.state.locations))\r\n\r\n\t\t// Check if location parameter matches a building\r\n\t\t// if(this.props.match.params.location && locations[this.props.match.params.location]) {\r\n\t\t// \tlet activeFeature = jsonData.features.find(f => f.properties.title === locations[this.props.match.params.location].label)\r\n\t\t// \tthis.setState({ activeFeature })\r\n\t\t// }\r\n\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif(nextProps.match.params.location !== this.props.match.params.location) {\r\n\t\t\tthis.setState({ activeFeature: locations[nextProps.match.params.location] || null })\r\n\t\t}\r\n\t}\r\n\r\n\t_onHover = event => {\r\n\r\n\t\tlet hoverInfo = null;\r\n\t\tlet buildingName = '';\r\n\t\tconst {\r\n\t\t\tfeatures,\r\n\t\t\tsrcEvent: { offsetX, offsetY },\r\n\t\t} = event;\r\n\r\n\t\tconst hoveredFeature = features && features.find(f => f.layer.id === 'building-fills');\r\n\r\n\t\tthis.setState({ hoveredFeature });\r\n\t\t\r\n\t\t// const building = event.features[0]\r\n\t\tif(hoveredFeature){\r\n\t\t\t// console.log(hoveredFeature);\r\n\t\t\tconsole.log(event)\r\n\t\t\tbuildingName = event.features[0].properties.title;\r\n\t\t\thoverInfo = event.lngLat;\r\n\t\t\tthis.setState({ \r\n\t\t\t\thoverInfo,\r\n\t\t\t\tfilter: ['in', 'title', buildingName]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t};\r\n\t_renderPopup() {\r\n\t\tconst { hoverInfo, hoveredFeature } = this.state;\r\n\t\tif (hoverInfo && hoveredFeature) {\r\n\t\t\treturn (\r\n\t\t\t\t<Popup longitude={Object.values(hoverInfo)[0]} latitude={Object.values(hoverInfo)[1]} closeButton={false}>\r\n\t\t\t\t\t<div className=\"building info-window\">{hoveredFeature.properties.title}</div>\r\n\t\t\t\t\t<p>ADD DESCRIPTION OF BUILDINGS HERE</p>\r\n\t\t\t\t</Popup>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t_onClick = event => {\r\n\r\n\t\tconst {\r\n\t\t\tfeatures,\r\n\t\t\tsrcEvent: { offsetX, offsetY },\r\n\t\t} = event;\r\n\r\n\t\tconst clickedFeature = features && features.find(f => f.layer.id === 'building-fills');\r\n\t\tconsole.log(this.props)\r\n\t\tif(clickedFeature) {\r\n\t\t\tlet buildingData = this.state.locations.find(loc => loc.label === clickedFeature.properties.title) || \"\";\r\n\t\t\tthis.props.history.push('/map/' + buildingData.value)\r\n\t\t} else {\r\n\t\t\tthis.props.history.push('/map')\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(this.props)\r\n\r\n\t}\r\n\r\n\t_renderSidebar() {\r\n\r\n\t\tif(this.state.activeFeature){\r\n\t\t\treturn (\r\n\t\t\t\t<Panel\r\n\t\t\t\t\tdata={this.state.activeFeature}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tid=\"MapSelect\"\r\n\t\t\t\t\toptions={this.state.locations}\r\n\t\t\t\t\tdefaultValue={this.props.match.params.location ? \r\n\t\t\t\t\t\tlocations[Object.keys(locations).find(key => key.toLowerCase() === this.props.match.params.location.toLowerCase())] || null\r\n\t\t\t\t\t: null}\r\n\t\t\t\t\tfilterOption={(option, searchText) => {\r\n\t\t\t\t\t\tconsole.log(option)\r\n\t\t\t\t\t\tif( option.label.toLowerCase().includes(searchText.toLowerCase()) ||\r\n\t\t\t\t\t\t\toption.value.toLowerCase().includes(searchText.toLowerCase()) ||\r\n\t\t\t\t\t\t\toption.data.tags.some(tag => tag.includes(searchText.toLowerCase())) ) \r\n\t\t\t\t\t\t\treturn true \r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tformatOptionLabel={({ value, label, code }) => (\r\n\t\t\t\t\t\t<Link to={'/map/' + value}>\r\n\t\t\t\t\t\t\t<div style={{ display: \"flex\", color: \"#353535\" }}>\r\n\t\t\t\t\t\t\t\t<div>{label}</div>\r\n\t\t\t\t\t\t\t\t{code ? \r\n\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: \"8px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<Chip \r\n\t\t\t\t\t\t\t\t\t\t\tvariant='outlined' \r\n\t\t\t\t\t\t\t\t\t\t\tlabel={code}\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t: \"\"}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<ReactMapGL \r\n\t\t\t\t\tref={(reactMap) => this.reactMap = reactMap}\r\n\t\t\t\t\tstyle={{ width: '100%', height: '100%'}}\r\n\t\t\t\t\tmapStyle=\"mapbox://styles/mapbox/dark-v10\"\r\n\t\t\t\t\tmapboxApiAccessToken={this.state.apiKey}\r\n\t\t\t\t\tinteractiveLayerIds={['building-fills']}\r\n\t\t\t\t\t{...this.state.viewport}\r\n\t\t\t\t\tonViewportChange={(viewport) => this.setState({ viewport })}\r\n\t\t\t\t\tonHover={this._onHover}\r\n\t\t\t\t\tonClick={this._onClick}\r\n\t\t\t\t>\r\n\t\t\t\t<Source type=\"geojson\" data={this.state.data}>\r\n\t\t\t\t\t<Layer {...this.state.styleFill}/>\r\n\t\t\t\t\t<Layer {...this.state.highlightedFill} filter={this.state.filter}/>\r\n\t\t\t\t</Source>\r\n\t\t\t\t{this._renderPopup()}\r\n\t\t\t\t{this._renderSidebar()}\r\n\t\t\t\t</ReactMapGL>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(Map)","import React, { Component } from 'react';\r\n\r\nimport { AppBar, Toolbar, Button, Grid } from '@material-ui/core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { NavLink, Link, withRouter } from 'react-router-dom'\r\n\r\nimport './Navigation.css'\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"Props:\", nextProps)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div \r\n                id=\"Navigation\"\r\n                style={this.props.location.pathname === \"/\" ? \r\n                    { backgroundColor: \"transparent\" }\r\n                    :\r\n                    { backgroundColor: \"#353535\" }\r\n                }    \r\n            >\r\n                <AppBar position=\"static\" style={{boxShadow: 'none'}}>\r\n                    <Toolbar>\r\n                        <Grid container justify=\"space-between\">\r\n                            <Grid item>\r\n                                <Link to=\"/\">\r\n                                    <Button className=\"navButton\" style={this.props.location.pathname === \"/\" ? {color: \"#353535\"} : {color: \"#FFF\"}}>\r\n                                        <img width={32} height={37} src=\"https://upload.wikimedia.org/wikipedia/commons/4/4e/Texas_Tech_Athletics_logo.svg\" alt=\"Logo\" />\r\n                                            Resource Guide\r\n                                    </Button>\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item id=\"NavigationRight\">\r\n                                <NavLink to=\"/map\" activeClassName=\"selected\">\r\n                                    <Button className=\"navButton\" style={this.props.location.pathname === \"/\" ? {color: \"#353535\"} : {color: \"#FFF\"}}>\r\n                                        Map\r\n                                    </Button>\r\n                                </NavLink>\r\n                                <NavLink to=\"/calendar\" activeClassName=\"selected\">\r\n                                    <Button className=\"navButton\" style={this.props.location.pathname === \"/\" ? {color: \"#353535\"} : {color: \"#FFF\"}}>\r\n                                        Calendar\r\n                                    </Button>\r\n                                </NavLink>\r\n                                <NavLink to=\"/resources\" activeClassName=\"selected\">\r\n                                    <Button className=\"navButton\" style={this.props.location.pathname === \"/\" ? {color: \"#353535\"} : {color: \"#FFF\"}}>\r\n                                        Resources\r\n                                    </Button>\r\n                                </NavLink>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation)\r\n","import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { CssBaseline } from '@material-ui/core'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport Main from './components/Main'\r\nimport Schedule from './components/Schedule'\r\nimport Map from './components/Map'\r\nimport Navigation from './components/Navigation'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n\tlibrary.add(fab, fas, far)\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{/* <CssBaseline/> */}\r\n\t\t\t<Router basename=\"/TexasTechFreshmanGuide\">\r\n\t\t\t\t<Navigation/>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/' render={props => <Main {...props}/>} />\r\n\t\t\t\t\t<Route path='/calendar' render={props => <Schedule {...props}/>} />\r\n\t\t\t\t\t<Route path='/map/:location?' render={props => <Map {...props}/>} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Buildings.ad9d51cf.geojson\";"],"sourceRoot":""}